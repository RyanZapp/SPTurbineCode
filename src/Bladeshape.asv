function [Chord,Twist,Circ,Height,Radius,TAxis] = Bladeshape(segLength1,segLength2,bladeNodes,H,AR,ChordLength)
    %segLength1 = 5;
    %segLength2 = 24;
    %segLength3 = 5;
    % The values are in imperial units from my understanding
    %ChordLength = [0.0762, 0.0762, 3]; % chord lengths in inches
    % Multiply by 0.0254 to go from inches to meters
    % Multiply by 0.3048 to go from feet to meters
    %bladeName = 'NREL_5MW'; % Change this to match your blade name
    %numBlades = '3';
    %H = 1.5; % (feet) Half the height of the shaft (non-varying parameter)
    %bladeNodes = 34; % Number of airfoil segments used to approximate the blade
    S = 0.5; % Value that you scale TAxis by
    z = linspace(0,2*H,bladeNodes)';
    %AR = 1.11; % Aspect Ratio...This value is eqaul to H/R; (Current is 1.11)
    R_true = H/AR;
    
    %space = ' ';
    z1 = linspace(-H,H,bladeNodes)';
    
    N2 = 7000;
    aa = linspace(0.01,5,N2);
    R_approx = -aa + aa.*cosh(H./aa);
    R = interp1(R_approx,R_approx,R_true,'nearest');
    for j = 1:N2
        if (R_approx(j) == R)
            a = aa(j);
        end
    end
    % The equation below is for visualization purposes
    % The equation we will export must be shifted and flipped due to the way
    % that Qblade takes in data
    y_viz = a*cosh(z1/a) - a*cosh(H/a);
    y_calc = -a*cosh(z/a - H/a) + a*cosh(H/a); % use this for calculations in Qblade
    figure
    plot(z1,y_viz,'b','LineWidth',1.5)
    hold on
    plot([-H H],[0 0],'k','LineWidth',1.5)
    hold off
    title('Catenary Blade Shape Plot (For Visualization Purposes)')
    grid on
    axis equal
    axis([-(H+1) (H+1) -inf 1])
    %maximum value occurs -a + a cosh(H/a)
    Twist = num2str(zeros(bladeNodes,1));
    Circ = num2str(zeros(bladeNodes,1));
    Height = num2str(0.3048*z);
    Radius = num2str(0.3048*y_calc);
    TAxis = num2str(S*ones(bladeNodes,1));
    
    Chord = 0.0254*ones(bladeNodes,1);
    % OG numbers were 1:5, 6:29, 30:34
    Chord(1:segLength1) = ChordLength*Chord(1:segLength1);
    Chord(segLength1+1:segLength1+segLength2) = ChordLength*Chord(segLength1+1:segLength1+segLength2);
    Chord(segLength1+segLength2+1:end) = ChordLength*Chord(segLength1+segLength2+1:end);
    Chord = num2str(Chord);
    
    T1 = 'HEIGHT [m]'; % This used to read "POS [m]"
    T2 = 'CHORD [m]';
    T3 = 'RADIUS [m]';
    T4 = 'TWIST [deg]';
    T5 = 'CIRC [deg]';
    T6 = 'TAXIS [-]';
    
    s1 = '----------------------------------------QBlade Blade Definition File------------------------------------------------';
    s2 = '----------------------------------------Object Name-----------------------------------------------------------------';
    s3 = '----------------------------------------Parameters------------------------------------------------------------------';
    s4 = '----------------------------------------Blade Data------------------------------------------------------------------';
    
    timeSpec = 'Time : %s\n';
    Time = datetime('now','TimeZone','local','Format','HH:mm:ss');
    dateSpec = 'Date : %s\n';
    Date = datetime('now','TimeZone','local','Format','dd.MM.yyyy');
    
   
    fid = fopen(outputLocation,'w');
    fprintf(fid,s1);
    fprintf(fid,'\n');
    fprintf(fid,'Generated with : QBlade CE v 2.0.4.8_alpha windows\n');
    fprintf(fid,'Archive Format: 310002\n');
    fprintf(fid,timeSpec,Time);
    fprintf(fid,dateSpec,Date);
    fprintf(fid,'\n');
    fprintf(fid,s2);
    fprintf(fid,'\n');
    fprintf(fid,bladeName);
    for j = 1:(41 - length(bladeName))
        fprintf(fid,' ');
    end
    fprintf(fid,'OBJECTNAME');
    for j = 1:9
        fprintf(fid,' ');
    end
    fprintf('- the name of the blade object\n');
    fprintf(fid,'\n');
    fprintf(fid,s3);
    fprintf(fid,'\n');
    fprintf(fid,'VAWT');
    for j = 1:37
        fprintf(fid,' ');
    end
    fprintf(fid,'ROTORTYPE');
    for j = 1:10
        fprintf(fid,' ');
    end
    fprintf(fid,'- the rotor type\n');
    fprintf(fid,numBlades);
    for j = 1:40
        fprintf(fid,' ');
    end
    fprintf(fid,'NUMBLADES');
    for j = 1:10
        fprintf(fid,' ');
    end
    fprintf(fid,'- number of blades\n');
    fprintf(fid,s4);
    fprintf(fid,'\n');
    fprintf(fid,T1);
    for j = 1:(20-length(T1))
        fprintf(fid,' ');
    end
    fprintf(fid,T2);
    % spacings of 20
    for j = 1:(20-length(T2))
        fprintf(fid,' ');
    end
    fprintf(fid,T3);
    for j = 1:(20-length(T3))
        fprintf(fid,' ');
    end
    fprintf(fid,T4);
    for j = 1:(20-length(T4))
        fprintf(fid,' ');
    end
    fprintf(fid,T5);
    for j = 1:(20-length(T5))
        fprintf(fid,' ');
    end
    fprintf(fid,T6);
    for j = 1:(20-length(T6))
        fprintf(fid,' ');
    end
    fprintf(fid,'\n');
    for j = 1:bladeNodes
        fprintf(fid,Height(j,:));
        for i = 1:(20-length(Height(j,:)))
            fprintf(fid,' ');
        end
        fprintf(fid,Chord(j,:));
        for i = 1:(20-length(Chord(j,:)))
            fprintf(fid,' ');
        end
        fprintf(fid,Radius(j,:));
        for i = 1:(20-length(Radius(j,:)))
            fprintf(fid,' ');
        end
        fprintf(fid,Twist(j,:));
        for i = 1:(20-length(Twist(j,:)))
            fprintf(fid,' ');
        end
        fprintf(fid,Circ(j,:));
        for i = 1:(20-length(Circ(j,:)))
            fprintf(fid,' ');
        end
        fprintf(fid,TAxis(j,:));
        for i = 1:(20-length(TAxis(j,:)))
            fprintf(fid,' ');
        end
        fprintf(fid,'\n');
    end

    fclose('all');
end